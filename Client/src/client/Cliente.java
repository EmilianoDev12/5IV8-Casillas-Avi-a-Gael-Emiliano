package client;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gaemil
 */
public class Cliente extends javax.swing.JFrame implements Runnable{

    private boolean conectado = false;
    private int lugaresD;
    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();
        Thread hilo = new Thread(this);
        hilo.start();
        try{
            this.conectar();
            this.conectado = true;
        }catch(IOException e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Recuerda que el acceso es de 20 personas por grupo");

        jLabel4.setText("Lugares disponibles:");

        jTextField1.setEditable(false);

        jButton2.setText("Dejar Pasar Grupo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jButton2)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jButton2)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if(!this.conectado){
                try{
                    this.conectar();
                    this.conectado = true;
                }catch(IOException e){

                }
            }
            Socket link = new Socket("192.168.0.7", 9999);
            DataOutputStream salida = new DataOutputStream(link.getOutputStream());
            salida.writeUTF("++");
            salida.close();

        } catch (IOException ex) {
           
        }
    }//GEN-LAST:event_jButton2ActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void conectar() throws IOException{
        String ip = JOptionPane.showInputDialog("¿Cuál es tu ip?");
        Socket link = new Socket("192.168.0.7", 9999);
        DataOutputStream salida = new DataOutputStream(link.getOutputStream());
        salida.writeUTF(ip);
        salida.close();
    }

    @Override
    public void run() {
        try{
            ServerSocket servidorCli = new ServerSocket(9090);
            while(true){
                Socket cliente = servidorCli.accept();
                DataInputStream flujoE = new DataInputStream(cliente.getInputStream());
                String out = flujoE.readUTF();
                this.lugaresD = Integer.parseInt(out);
                jTextField1.setText("" + this.lugaresD);
                cliente.close();
                if(this.lugaresD == 0){
                    jButton2.setEnabled(false);
                }
            }
        }catch(Exception e){
            System.out.println("a");
        }
    }
}
